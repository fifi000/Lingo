@page "/words/{episodeId:int}"

@inject LiteDbDataAccess DataManager
@inject OpenSubtitlesManager OpenSubtitlesManager
@inject OpenAiManager OpenAiManager

<h3>Words</h3>

@if (Set is null)
{
	<LoadingSpinner />
}
else
{
	<table class="table table-hover">
		<thead>
			<tr>
				@*<th scope="col">#</th>*@
				<th scope="col">English</th>
				<th scope="col">Polish</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var pair in Set.Words)
			{
				<tr>
					<td>@pair.English</td>
					<td>@pair.Polish</td>
				</tr>
			}
		</tbody>
	</table>
}



@code {

	[Parameter]
	public int EpisodeId { get; set; }	

	public SetModel Set { get; set; }


	protected async override Task OnParametersSetAsync()
	{

		if (EpisodeId == 0)
		{
			throw new Exception();
		}

		// check if a set with words is already created
		// for this specific episode
		Set = DataManager.GetSet(EpisodeId);

		if (Set is not null) return;

		// get subtitles
		var subtitles = await OpenSubtitlesManager.GetSubtitles(EpisodeId);

		// reformat subtitles
		var lines = Helper.FormatSubtitles(subtitles);

		// call chat
		var words = await OpenAiManager.GetWords(lines);

		// create set 
		Set = new()
		{
			Words = words,
			EpisodeId = EpisodeId
		};

		// save set to db
		DataManager.CreateSet(Set);
	}
}
