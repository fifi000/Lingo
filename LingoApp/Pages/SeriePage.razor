@page "/serie/{serieId:int}"

@inject IConfiguration Configuration

<div>

	@if (Serie is null)
	{
		<div class="spinner-grow" role="status">
			<span class="visually-hidden">Loading...</span>
		</div>
	}
	else
	{
		<div class="navbar">
			<SerieInfoCard Serie=Serie ShortDescription=false/>
		</div>

		<nav class="bg-white top-0 pt-3 position-sticky border rounded-bottom" style="z-index: 1020; --bs-bg-opacity: .95" aria-label="Seasons Navigation">
			<ul class="pagination justify-content-center">
				@foreach (var season in Serie.Seasons)
				{
					<li class="page-item @((_currentSeason == season.Number) ? "active" : "")" @onclick="() => _currentSeason = season.Number">
						<a class="page-link user-select-none">@season.Number</a>
					</li>
				}
			</ul>
		</nav>

		<div>
			<div class="container my-4">
				<div class="row row-cols-1 g-4 row-cols-xl-4 row-cols-lg-3 row-cols-md-2 row-cols-sm-1">
					@foreach (var episode in Serie.Seasons.First(x => x.Number == _currentSeason).Episodes)
					{
						<EpisodeInfoCard Episode="episode"/>
					}
				</div>
			</div>
		</div>
	}
</div>


@code {
	[Parameter]
	public int SerieId { get; set; }

	public SerieModel Serie { get; set; }


	private TmdbManager _manager;
	private int _currentSeason;

	protected async override Task OnInitializedAsync()
	{
		var token = Configuration["Api:tmdb_token"];
		_manager = new TmdbManager(token);

		Serie = await _manager.GetSerieById(SerieId);
		_currentSeason = Serie.Seasons.First().Number;
	}

}
