@page "/serie/{serieId:int}"

@inject IConfiguration Configuration

<div>

	@if (Serie is null)
	{
		<div class="spinner-grow" role="status">
			<span class="visually-hidden">Loading...</span>
		</div>
	}
	else
	{
		<SerieInfoCard Serie=Serie ShortDescription=false/>

		<div>
			<nav aria-label="Seasons Navigation">
				<ul class="pagination">
					<li class="page-item">
						<a class="page-link" aria-label="Previous">
							<span aria-hidden="true">&laquo;</span>
						</a>
					</li>
					@foreach (var season in Serie.Seasons)
					{
						<li class="page-item" @onclick="() => _currentSeason = season.Number"><a class="page-link">@season.Number</a></li>
					}
					<li class="page-item">
						<a class="page-link" aria-label="Next">
							<span aria-hidden="true">&raquo;</span>
						</a>
					</li>
				</ul>
			</nav>
		</div>
		
		<div>
			<div class="container mb-3">
				<div class="row row-cols-1 row-cols-md-3 g-4">
					@foreach (var episode in Serie.Seasons.First(x => x.Number == _currentSeason).Episodes)
					{
						<EpisodeInfoCard Episode="episode"/>
					}
				</div>
			</div>
		</div>
	}
</div>


@code {
	[Parameter]
	public int SerieId { get; set; }

	public SerieModel Serie { get; set; }


	private TmdbManager _manager;
	private int _currentSeason;

	protected async override Task OnInitializedAsync()
	{
		var token = Configuration["Api:tmdb_token"];
		_manager = new TmdbManager(token);

		Serie = await _manager.GetSerieById(SerieId);
		_currentSeason = Serie.Seasons.First().Number;
	}

}
